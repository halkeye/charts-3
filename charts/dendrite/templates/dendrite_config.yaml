apiVersion: v1
kind: Secret
metadata:
  name: grafana-data-value
data:
  test: |
    # This is the Dendrite configuration file.
    #
    # The configuration is split up into sections - each Dendrite component has a
    # configuration section, in addition to the "global" section which applies to
    # all components.
    
    # The version of the configuration file.
    version: 2
    
    # Global Matrix configuration. This configuration applies to all components.
    global:
      # The domain name of this homeserver.
      server_name: {{ .Values.dendrite.config.global.serverName }}
    
      # The path to the signing private key file, used to sign requests and events.
      # Note that this is NOT the same private key as used for TLS! To generate a
      # signing key, use "./bin/generate-keys --private-key matrix_key.pem".
      private_key: matrix_key.pem
    
      # The paths and expiry timestamps (as a UNIX timestamp in millisecond precision)
      # to old signing private keys that were formerly in use on this domain. These
      # keys will not be used for federation request or event signing, but will be
      # provided to any other homeserver that asks when trying to verify old events.
      old_private_keys:
      #  - private_key: old_matrix_key.pem
      #    expired_at: 1601024554498
    
      # How long a remote server can cache our server signing key before requesting it
      # again. Increasing this number will reduce the number of requests made by other
      # servers for our key but increases the period that a compromised key will be
      # considered valid by other homeservers.
      key_validity_period: {{ .Values.dendrite.config.global.keyValidityPeriod }}
    
      # Global database connection pool, for PostgreSQL monolith deployments only. If
      # this section is populated then you can omit the "database" blocks in all other
      # sections. For polylith deployments, or monolith deployments using SQLite databases,
      # you must configure the "database" block for each component instead.
      {{ if .Values.postgres.enabled }}
      database:
        connection_string: postgresql://username:password@hostname/dendrite?sslmode=disable
        max_open_conns: 100
        max_idle_conns: 5
        conn_max_lifetime: -1
      {{ elif .Values.postgresExternal.enabled }}
      {{ elif }}
      {{ end }}
    
      # Configuration for in-memory caches. Caches can often improve performance by
      # keeping frequently accessed items (like events, identifiers etc.) in memory
      # rather than having to read them from the database.
      cache:
        # The estimated maximum size for the global cache in bytes, or in terabytes,
        # gigabytes, megabytes or kilobytes when the appropriate 'tb', 'gb', 'mb' or
        # 'kb' suffix is specified. Note that this is not a hard limit, nor is it a
        # memory limit for the entire process. A cache that is too small may ultimately
        # provide little or no benefit.
        max_size_estimated: {{ dendrite.config.global.cache.maxSizeEstimated }}
    
        # The maximum amount of time that a cache entry can live for in memory before
        # it will be evicted and/or refreshed from the database. Lower values result in
        # easier admission of new cache entries but may also increase database load in
        # comparison to higher values, so adjust conservatively. Higher values may make
        # it harder for new items to make it into the cache, e.g. if new rooms suddenly
        # become popular.
        max_age: {{ .Values.dendrite.config.global.cache.maxAge }}
    
      # The server name to delegate server-server communications to, with optional port
      # e.g. localhost:443
      well_known_server_name: {{ .Values.dendrite.config.global.wellKnownServerName }}
    
      # The server name to delegate client-server communications to, with optional port
      # e.g. localhost:443
      well_known_client_name: {{ .Values.dendrite.config.global.wellKnownClientName }}
    
      # Lists of domains that the server will trust as identity servers to verify third
      # party identifiers such as phone numbers and email addresses.
      {{- with .Values.dendrite.config.global.trustedThirdPartyIdServers }}
      trusted_third_party_id_servers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    
      # Disables federation. Dendrite will not be able to communicate with other servers
      # in the Matrix federation and the federation API will not be exposed.
      disable_federation: {{ .Values.dendrite.config.global.disableFederation }}
    
      # Configures the handling of presence events. Inbound controls whether we receive
      # presence events from other servers, outbound controls whether we send presence
      # events for our local users to other servers.
      presence:
        enable_inbound: {{ .Values.dendrite.config.global.presence.enableInbound }}
        enable_outbound: {{ .Values.dendrite.config.global.presence.enableOutbound }}
    
      # Configures phone-home statistics reporting. These statistics contain the server
      # name, number of active users and some information on your deployment config.
      # We use this information to understand how Dendrite is being used in the wild.
      report_stats:
        enabled: {{ .Values.dendrite.config.global.reportStats.enabled }}
        endpoint: {{ .Values.dendrite.config.global.reportStats.endpoint }}
    
      # Server notices allows server admins to send messages to all users on the server.
      server_notices:
        enabled: {{ .Values.dendrite.config.global.serverNotices.enabled }}
        # The local part, display name and avatar URL (as a mxc:// URL) for the user that
        # will send the server notices. These are visible to all users on the deployment.
        local_part: {{ .Values.dendrite.config.global.serverNotices.localPart }}
        display_name: {{ .Values.dendrite.config.global.serverNotices.displayName }}
        avatar_url: {{ .Values.dendrite.config.global.serverNotices.avatarUrl }}
        # The room name to be used when sending server notices. This room name will
        # appear in user clients.
        room_name: {{ .Values.dendrite.config.global.serverNotices.roomName }}
    
      # Configuration for NATS JetStream
      jetstream:
        # A list of NATS Server addresses to connect to. If none are specified, an
        # internal NATS server will be started automatically when running Dendrite in
        # monolith mode. For polylith deployments, it is required to specify the address
        # of at least one NATS Server node.
      {{- with .Values.dendrite.config.global.jetstream.addresses }}
        addresses:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    
        # Disable the validation of TLS certificates of NATS. This is
        # not recommended in production since it may allow NATS traffic
        # to be sent to an insecure endpoint.
        disable_tls_validation: {{ .Values.dendrite.config.global.jetstream.disableTLSValidation }}
    
        # Persistent directory to store JetStream streams in. This directory should be
        # preserved across Dendrite restarts.
        storage_path: {{ .Values.dendrite.config.global.jetstream.storagePath }}
    
        # The prefix to use for stream names for this homeserver - really only useful
        # if you are running more than one Dendrite server on the same NATS deployment.
        topic_prefix: {{ .Values.dendrite.config.global.jetstream.topicPrefix }}
    
      # Configuration for Prometheus metric collection.
      metrics:
        enabled: {{ .Values.dendrite.config.global.metrics.enabled }}
        basic_auth:
          username: {{ .Values.dendrite.config.global.metrics.basicAuth.username }}
          password: {{ .Values.dendrite.config.global.metrics.basicAuth.password }}
    
      # Optional DNS cache. The DNS cache may reduce the load on DNS servers if there
      # is no local caching resolver available for use.
      dns_cache:
        enabled: {{ .Values.dendrite.config.global.dnsCache.enabled }}
        cache_size: {{ .Values.dendrite.config.global.dnsCache.cacheSize }}
        cache_lifetime: {{ .Values.dendrite.config.global.dnsCache.cacheLifetime | quote }} # 5 minutes; https://pkg.go.dev/time@master#ParseDuration
    
    # Configuration for the Appservice API.
    app_service_api:
      # Disable the validation of TLS certificates of appservices. This is
      # not recommended in production since it may allow appservice traffic
      # to be sent to an insecure endpoint.
      disable_tls_validation: {{ .Values.dendrite.config.global.appServiceAPI.disableTLSValidation }}
    
      # Appservice configuration files to load into this homeserver.
    {{- with .Values.dendrite.config.global.appServiceAPI.configFiles }}
      config_files:
        {{- toYaml . | nindent 8 }}
    {{- end }}

    # Configuration for the Client API.
    client_api:
      # Prevents new users from being able to register on this homeserver, except when
      # using the registration shared secret below.
      registration_disabled: {{ .Values.dendrite.config.global.clientAPI.registrationDisabled }}
    
      # Prevents new guest accounts from being created. Guest registration is also
      # disabled implicitly by setting 'registration_disabled' above.
      guests_disabled: {{ .Values.dendrite.config.global.clientAPI.guestsDisabled }}
    
      # If set, allows registration by anyone who knows the shared secret, regardless
      # of whether registration is otherwise disabled.
      registration_shared_secret: {{ .Values.dendrite.config.global.clientAPI.registrationSharedSecret }}
    
      # Whether to require reCAPTCHA for registration. If you have enabled registration
      # then this is HIGHLY RECOMMENDED to reduce the risk of your homeserver being used
      # for coordinated spam attacks.
      enable_registration_captcha: {{ .Values.dendrite.config.global.clientAPI.enableRegistrationCaptcha }}
    
      # Settings for ReCAPTCHA.
      recaptcha_public_key: {{ .Values.dendrite.config.global.clientAPI.recaptchaPublicKey }}
      recaptcha_private_key: {{ .Values.dendrite.config.global.clientAPI.recaptchaPrivateKey }}
      recaptcha_bypass_secret: {{ .Values.dendrite.config.global.clientAPI.recaptchaBypassSecret }}""
      recaptcha_siteverify_api: {{ .Values.dendrite.config.global.clientAPI.recaptchaSiteverifyAPI }}
    
      # TURN server information that this homeserver should send to clients.
      turn:
        turn_user_lifetime: {{ .Values.dendrite.config.global.clientAPI.turn.turnUserLifetime }}
      {{- with .Values.dendrite.config.global.clientAPI.turn.turnURIs }}
        turn_uris:
        {{- toYaml . | nindent 10 }}
      {{- end }}
        turn_shared_secret: {{ .Values.dendrite.config.global.clientAPI.turn.turnSharedSecret }}
        # If your TURN server requires static credentials, then you will need to enter
        # them here instead of supplying a shared secret. Note that these credentials
        # will be visible to clients!
        # turn_username: ""
        # turn_password: ""
    
      # Settings for rate-limited endpoints. Rate limiting kicks in after the threshold
      # number of "slots" have been taken by requests from a specific host. Each "slot"
      # will be released after the cooloff time in milliseconds. Server administrators
      # and appservice users are exempt from rate limiting by default.
      rate_limiting:
        enabled: {{ .Values.dendrite.config.global.clientAPI.rateLimiting.enabled }}
        threshold: {{ .Values.dendrite.config.global.clientAPI.rateLimiting.threshold }}
        cooloff_ms: {{ .Values.dendrite.config.global.clientAPI.rateLimiting.cooloff_ms }}
        {{- with .Values.dendrite.config.global.clientAPI.rateLimiting.exemptUserIDs }}
        exempt_user_ids:
        {{- toYaml . | nindent 10 }}
        {{- end }}
    
    # Configuration for the Federation API.
    federation_api:
      # How many times we will try to resend a failed transaction to a specific server. The
      # backoff is 2**x seconds, so 1 = 2 seconds, 2 = 4 seconds, 3 = 8 seconds etc. Once
      # the max retries are exceeded, Dendrite will no longer try to send transactions to
      # that server until it comes back to life and connects to us again.
      send_max_retries: {{ .Values.dendrite.config.global.federationAPI.sendMaxRetries }}
    
      # Disable the validation of TLS certificates of remote federated homeservers. Do not
      # enable this option in production as it presents a security risk!
      disable_tls_validation: {{ .Values.dendrite.config.global.federationAPI.disableTLSValidation }}
    
      # Perspective keyservers to use as a backup when direct key fetches fail. This may
      # be required to satisfy key requests for servers that are no longer online when
      # joining some rooms.
      {{- with .Values.dendrite.config.global.federationAPI.keyPerspectives }}
      key_perspectives:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    
      # This option will control whether Dendrite will prefer to look up keys directly
      # or whether it should try perspective servers first, using direct fetches as a
      # last resort.
      prefer_direct_fetch: {{ .Values.dendrite.config.global.federationAPI.preferDirectFetch }}
    
    # Configuration for the Media API.
    media_api:
      # Storage path for uploaded media. May be relative or absolute.
      base_path: ./media_store
    
      # The maximum allowed file size (in bytes) for media uploads to this homeserver
      # (0 = unlimited). If using a reverse proxy, ensure it allows requests at least
      #this large (e.g. the client_max_body_size setting in nginx).
      max_file_size_bytes: 10485760
    
      # Whether to dynamically generate thumbnails if needed.
      dynamic_thumbnails: false
    
      # The maximum number of simultaneous thumbnail generators to run.
      max_thumbnail_generators: 10
    
      # A list of thumbnail sizes to be generated for media content.
      thumbnail_sizes:
        - width: 32
          height: 32
          method: crop
        - width: 96
          height: 96
          method: crop
        - width: 640
          height: 480
          method: scale
    
    # Configuration for enabling experimental MSCs on this homeserver.
    mscs:
      mscs:
      #  - msc2836  # (Threading, see https://github.com/matrix-org/matrix-doc/pull/2836)
      #  - msc2946  # (Spaces Summary, see https://github.com/matrix-org/matrix-doc/pull/2946)
    
    # Configuration for the Sync API.
    sync_api:
      # This option controls which HTTP header to inspect to find the real remote IP
      # address of the client. This is likely required if Dendrite is running behind
      # a reverse proxy server.
      # real_ip_header: X-Real-IP
      fulltext:
        enabled: false
        index_path: "./fulltextindex"
        language: "en" # more possible languages can be found at https://github.com/blevesearch/bleve/tree/master/analysis/lang
    
    # Configuration for the User API.
    user_api:
      # The cost when hashing passwords on registration/login. Default: 10. Min: 4, Max: 31
      # See https://pkg.go.dev/golang.org/x/crypto/bcrypt for more information.
      # Setting this lower makes registration/login consume less CPU resources at the cost
      # of security should the database be compromised. Setting this higher makes registration/login
      # consume more CPU resources but makes it harder to brute force password hashes. This value
      # can be lowered if performing tests or on embedded Dendrite instances (e.g WASM builds).
      bcrypt_cost: 10
    
      # The length of time that a token issued for a relying party from
      # /_matrix/client/r0/user/{userId}/openid/request_token endpoint
      # is considered to be valid in milliseconds.
      # The default lifetime is 3600000ms (60 minutes).
      # openid_token_lifetime_ms: 3600000
    
    # Configuration for Opentracing.
    # See https://github.com/matrix-org/dendrite/tree/master/docs/tracing for information on
    # how this works and how to set it up.
    tracing:
      enabled: false
      jaeger:
        serviceName: ""
        disabled: false
        rpc_metrics: false
        tags: []
        sampler: null
        reporter: null
        headers: null
        baggage_restrictions: null
        throttler: null
    
    # Logging configuration. The "std" logging type controls the logs being sent to
    # stdout. The "file" logging type controls logs being written to a log folder on
    # the disk. Supported log levels are "debug", "info", "warn", "error".
    logging:
      - type: std
        level: info
      - type: file
        level: info
        params:
          path: ./logs