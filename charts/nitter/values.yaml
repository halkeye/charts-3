# Default values for nitter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

nitter:
  server:
    address: "0.0.0.0"
    port: 8080
    https: false
    httpMaxConnections: 100
    staticDir: "./public"
    title: "Nitter"
    hostname: "nitter.net"
  cache:
    listMinutes: 240
    rssMinutes: 10
    redisConnections: 20
    redisMaxConnections: 30
  config:
    hmacKey: "secretkey"
    base64Media: false
    enableRSS: true
    enableDebug: false
    proxy: ""
    proxyAuth: ""
    tokenCount: 10
  preferences:
    theme: "Nitter"
    replaceTwitter: "nitter.net"
    replaceYouTube: "piped.kavin.rocks"
    replaceReddit: "teddit.net"
    replaceInstagram: ""
    proxyVideos: true
    hlsPlayback: false
    infiniteScroll: false

## This configuration is for the internal Redis that's deployed for use with
## workers/sharding, for an external Redis server you want to set enabled to
## false and configure the externalRedis block.
##
redis:
  enabled: true

  auth:
    enabled: true
    existingSecret: nitter-redis
    existingSecretPasswordKey: password
    # XXX Change me!
    # password: synapse

  ## Or use existing secret with "redis-password" key
  ## instead of static password
  ##
  # existingSecret: redis-secret

  architecture: standalone
  master:
    persistence:
      ## Note that Synapse only uses redis as a synchronization utility, so no
      ## data will ever need to be persisted.
      ##
      enabled: false
    statefulset:
      updateStrategy: RollingUpdate

## An externally configured Redis server to use for workers/sharding.
##
externalRedis:
  # host: redis
  port: 6379
  # password: synapse

  ## The name of an existing secret with redis credentials
  #existingSecret: redis-secrets

  ## Password key to be retrieved from existing secret

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
