---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "matrix-synapse.fullname" . }}
  labels:
    {{- include "matrix-synapse.labels" . | nindent 4 }}
stringData:
  config.yaml: |
    {{- if .Values.config.recaptcha }}
    {{- if .Values.config.recaptcha.existingSecret }}
    ## recaptcha ##
    recaptcha_public_key: "@@@RecaptchaPublicKey@@@"
    recaptcha_private_key: "@@@RecaptchaPrivateKey@@@"
    {{- else }}
    ## Captcha ##
    recaptcha_public_key: {{ .Values.config.recaptcha.publicKey }}
    recaptcha_private_key: {{ .Values.config.recaptcha.privateKey | quote }}
    {{- end }}
    {{- end }}
    {{- if .Values.config.email.enabled }}
    ## email ##
    email:
      smtp_host: {{ .Values.config.email.smtpHost | quote }}
      smtp_port: {{ .Values.config.email.smtpPort }}
      smtp_user: {{ .Values.config.email.smtpUser | quote }}
      {{- if .Values.config.email.existingSecret }}
      smtp_pass: "@@@smtpPassword@@@"
      {{- else }}
      smtp_pass: {{ .Values.config.email.smtpPass |quote }}
      {{- end }}
      force_tls: {{ .Values.config.email.forceTls }}
      require_transport_security: {{ .Values.config.email.requireTransportSecurity }}
      enable_tls: {{ .Values.config.email.enableTls }}
      notif_from: {{ .Values.config.email.notifFrom | quote }}
      app_name: {{ .Values.config.email.appName }}
      enable_notifs: {{ .Values.config.email.enableNotifs }}
      notif_for_new_users: {{ .Values.config.email.notifForNewUsers }}
      client_base_url: {{ .Values.config.email.clientBaseUrl | quote }}
      validation_token_lifetime: {{ .Values.config.email.validationTokenLifetime }}
      invite_client_location: {{ .Values.config.email.inviteClientLocation }}
      {{- with .Values.config.email.subjects }}
      subjects:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
    {{- end }}

    {{- if .Values.config.turnSecret }}

    ## Turn ##

    turn_shared_secret: {{ .Values.config.turnSecret | quote }}

    {{- end }}
    ## Registration ##

    registration_shared_secret: {{ .Values.config.registrationSharedSecret | default (randAlphaNum 24) | quote }}

    ## API Configuration ##

    {{- if .Values.config.macaroonSecretKey }}

    macaroon_secret_key: {{ .Values.config.macaroonSecretKey | quote }}
    {{- end }}

{{- $postgresHost := include "matrix-synapse.postgresql.host" . }}
{{- $postgresDB   := include "matrix-synapse.postgresql.database" . }}
{{- $postgresUser := include "matrix-synapse.postgresql.username" . }}
{{- $postgresPort := include "matrix-synapse.postgresql.port" . }}
{{- $postgresPass := include "matrix-synapse.postgresql.password" . }}
{{- $postgresSSLMode := include "matrix-synapse.postgresql.sslmode" . }}
{{- $postgresExtraArgs := include "matrix-synapse.postgresql.extraArgs" . }}

    ## Database configuration ##

    database:
      name: "psycopg2"
      args:
        user: {{ $postgresUser | quote }}
        {{- if and $postgresPass (not .Values.postgresql.auth.existingSecret) }}
        password: {{ $postgresPass | quote }}
        {{- else }}
        password: "@@POSTGRES_PASSWORD@@"
        {{- end }}
        database: {{ $postgresDB | quote }}
        host: {{ $postgresHost | quote }}
        port: {{ $postgresPort }}
        sslmode: {{ $postgresSSLMode | quote }}
        cp_min: 5
        cp_max: 10
        {{- $postgresExtraArgs | nindent 8 }}

{{- $redisHost := include "matrix-synapse.redis.host" . }}
{{- $redisPort := include "matrix-synapse.redis.port" . }}
{{- $redisPass := include "matrix-synapse.redis.password" . }}

    ## Redis configuration ##

    redis:
      enabled: true
      host: {{ $redisHost | quote }}
{{- if or .Values.redis.auth.enabled .Values.redis.usePassword .Values.redis.password .Values.redis.auth.password .Values.externalRedis.password }}
  {{- if and $redisPass (not .Values.redis.auth.existingSecret)  }}
      password: {{ $redisPass | quote }}
  {{- else }}
      password: "@@REDIS_PASSWORD@@"
  {{- end }}
  {{- if $redisPort }}
      port: {{ $redisPort }}
  {{- end }}
{{- end }}

    {{- with .Values.extraSecrets }}

    ## Extra secrets ##
    {{ . | toYaml | nindent 4 }}
    {{- end }}

{{- if and .Values.signingkey.job.enabled (not .Values.signingkey.existingSecret) }}
  {{- $name := include "matrix-synapse.workername" (dict "global" . "worker" "signingkey") }}
  {{- if not (lookup "v1" "Secret" .Release.Namespace $name) }}
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    helm.sh/resource-policy: keep
  name: {{ $name }}
  labels:
    {{- include "matrix-synapse.labels" . | nindent 4 }}
    app.kubernetes.io/component: signingkey-job
  {{- end }}
{{- end }}